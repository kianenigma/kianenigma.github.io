[
{
		"title": "Home",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/",
		"content": "About\n\nüì∏ Personal Gallery: <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/gallery/\">Gallery</a>\nüéß <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/playlist/\">Playlists</a> - Spotify\nüêô Github | Twitter | Linkedin (inactive)\nü¶Ä Rust Developer @paritytech.\nüìö Parallel and Distributed Systems Msc. Student at Vrije Universiteit Amsterdam.\nüî¥ Polkadot Fellow.\n\nPolkadot Address: 1eTPAR2TuqLyidmPT9rMmuycHVm9s9czu78sePqg2KHMDrE\nKusama Address: HL8bEp8YicBdrUmJocCAWVLKUaR2dd1y6jnD934pbre3un1\n\nü§ñ Often found online with the name @kianenigma.\n\nLatest Post\n\nFile\nCreated At\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/personal/meta-cognition-framework/\">Meta Cognition Framework</a>\n6:33 PM - March 24, 2024\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/personal/uneducated-unaffiliated-disinterested/\">Uneducated, Unaffiliated, Disinterested</a>\n9:33 PM - March 23, 2024\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/personal/the-price-of-change/\">The Price of Change</a>\n9:03 PM - March 23, 2024\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/polkadot-s-build-horizon/\">Polkadot's Build Horizon</a>\n4:40 PM - March 16, 2024\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/gallery/\">Gallery</a>\n12:29 PM - March 16, 2024\n\nMade with Obsidian-Digital-Garden",
		"tags": [ "note","gardenEntry"]
},

{
		"title": "Amsterdam BunkerTalks Experience 1",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/amsterdam-bunker-talks-experience-1/",
		"content": "Some time ago I went to a BunkerTalk in Amsterdam about Iran's political situation and human right issues. The words that are being said in such events should be pretty clear to you, so I will\nrephrase it in the easiest possible:\nIt is bad. Iran is moving fast toward becoming one of the most suppressive governments in the world and things are not looking good for the people living there.\nGiven the context, you can imagine that this gathering in Amsterdam among Iranians living here would be pretty much straight forward: Everyone agreeing that Iran sucks. Except.. I was also there and almost toward the end, after an hour of bashing Iran's right-wing politicians, I raised my hand to add a comment.\nI started by saying that I totally agree with everything said about Iran. Of course,\neveryone forgot about this about 30 seconds later. Anyways: I continued by arguing that: We must remember that everyone is to some extent deluded and affected by what story and fiction we decide to believe in. Me and most people who are reading this probably agree on human rights, equality, no gender discrimination and freedom of speech. Iran's version of Islam is to some extent against all of these. But we should not forget that they are also merely putting their faith in some story. Same as I am doing. Same as you are doing. In other words, they also deeply believe that they are doing the right thing. It is merely a matter of opinion.\nI can elaborate a bit more. I grew up in Iran. Islam and the absolute necessity of belief in it is\nput into your head from the day that you are born (literally). This, eventually, becomes your\nframework of life. Luckily, I was able to break out of this from a young age. Nowadays, thanks to the internet and more and more information being circulated, more and more people break out. But still, Many don't. All of those who join the IRGC, those that become the moral police, they simply never break out of this framework and it is all they know to life. And if you\ndon't, In such a society, you never grow the wisdom to think outside of this framework. This is how regardless of how horrible someone's actions might be, in the eyes of me or you as a liberal person, they still think they are doing the right person. Those forces who attack demonstrators in the streets of Tehran pretty frequently (and very often killing a few dozens), they also think they are doing the right thing. They surely believe that god will forgive them for doing this. Same goes for many of our politicians who still make wrong decisions. Same probably goes for the poor person who mistook an airplane for a missile and accidentally killed 176 people in a second.\nNow, I am not saying these people are not to be held responsible for their actions. Nor do I claim that what they do is justifiable. What I am saying is that we should confront them, in any way that we are confronting them, whilst remembering what I said above: Most often they have simply been fed the wrong story (if you want to be more objective: just a different story). And they are probably miserable deep down, but can't break out of their current mindset.\nIf we really think that they are wrong and we are right, the burden of enlightening them is\nactually upon us. We should not fight back as if they are our enemy and as if they are wrong and we are right. We should not claim the moral high ground. No, they are just wrong, and remember, miserable.\n\nI don't recall the words that I said that evening, but the gist it is the above few paragraphs. And\nthe response that I got was: &quot;I cannot think about enlightening someone one a gun is being held at my forehead&quot;. I had two counter arguments to this response, but sadly the tone of the night was such that I decided to not continue. After this answer, everyone applauded the response and I was asked by another attendant to not continue and that my comment was misplaced. But the answers that I would have told:\n\nThis is a pure emotional reaction, not a rational answer. That man who said that was an\natheist. And I know living in Iran must have been hard for him. And maybe at some point a gun was being pointed to his face. But not that day. And in that day, now that no gun is being held at anyone of us, we should decide to think rationally rather than clinging into past emotions.\nBut all in all, I see that what I am proposing is against what we do by default. If someone harasses you, you don't think about them with compassion. If someone steals, you punish them. You don't think about how to fix them.\n\nWell, my question is, why not? take the extreme case aside. If you are threatened by an imminent\ndanger, sure do whatever you find best. But that aside, when was the last time that you treated\nsomeone who was doing something &quot;wrong in your opinion&quot; with such a mindset?\n70 years ago, we were about to bring about WW2. And do you really think we have gotten better over the last 70 years, as species, with a higher level of consciousness, or are we the same, except we don't go to wars anymore because we have too much at stake?",
		"tags": [ "note"]
},

{
		"title": "An Open Letter to Javad Zarif",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/an-open-letter-to-javad-zarif/",
		"content": "I wrote comment in Iran's contemporary Minister of Foreign Affairs, Javad\nZarif's Youtube video on Iranian new year.\n\nThe gist of this man's message: &quot;accusing the west sanctions causing damage to Iranian healthcare system&quot;. This is just wrong. Don't get me wrong, me and my family suffer from the same, but let us at least be honest about it. For once in this regime's history, don't be be delusional. Stop blaming other countries and take responsibility.\nI wonder,\n\nWhen it comes to your Friday prayers and nationalist speeches, you do know very well how to shout &quot;America cannot do anything&quot; (ÿ¢ŸÖÿ±€å⁄©ÿß Ÿá€å⁄Ü ÿ∫ŸÑÿ∑€å ŸÜŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ÿ®⁄©ŸÜÿØ) with confidence, yet now in times of need, you are saying that it is their fault? That it it because of their sanctions that out healthcare system is broken? That it is not because of our poor economy and infrastructure?\nWhat is this whole fight over in the first place? Nuclear energy? At least a part of it seems to be related. Okay, fair enough. Please answer, with dignity: How many lives has our &quot;holy&quot; nuclear plan saved so far? How many hungry people have been fed because of it? How many jobs have been created? How many people have been made happy? Now answer the following: How many people have experienced poverty because of it? How many businesses have been destroyed because of sanctions? How many families are torn apart because of poverty?\n\nI have tried to keep this comment polite and rational so far. I will finish with a more informal\ntone though:\nYou are a smart man. Perhaps among the only Iranian politicians in whom there is a spark of realism. Pull your head out of your ass, stop being delusional, stop lying, and start fixing something, before more harm as been done to this nation, who's lonelier than ever.",
		"tags": [ "note"]
},

{
		"title": "An Open Letter to Panic Buyers",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/an-open-letter-to-panic-buyers/",
		"content": "I wrote and twitted this in the midst of the first wave of the Covid-19 outbreak in 2020.\n\nDear Panic Buyer,\nHere is something to think about.\nSay there are 100 pieces of bread in the country and 100 people, and each person needs 1 on average. The country on the other hand, has the capacity to make 200 pieces if needed. If ,say, a handful of people among a population of 100 start stockpiling 4 times their needs in their house, this will be:\n\npointless, as there is enough supply for anyone anyhow.\nnonetheless, harmless.\n\nIf ,on the other hand, 1/2 of the population of a 100 start stockpiling 4 times more than their\nneeds, then we end up in this situation where the total demand (250) exceeds the total capacity of the country (200), for no good reason. The is problematic because it is not a real problem. It is\ncreated merely because of our excessive needs in the first place.\nOf course, a virus spread might actually lead to a real shortage of some supplies (i.e. where the\nexample country above can produce 80 or less) as well. But we are not there yet. And in the path of getting there, we will inevitably reach the above situation as well. Hence, the first phase of any real shortage, if that is what you are preparing for by buying, is cause by ourselves, not any virus.\nThat being said, also note that if the situation becomes so severe that even developed countries\nfail to provide food and basic needs, we'd probably have much bigger problem than food (electricity, sewage, hygiene, lack of healthcare etc.). Without food, we can technically survive for a fairly long time, weeks if needed.",
		"tags": [ "note"]
},

{
		"title": "Gallery",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/gallery/",
		"content": "WIP: https://github.com/oleeskild/obsidian-digital-garden/issues/568\n\npath: resources/gallery\ntype: vertical\nradius: 8\ngutter: 12",
		"tags": [ "note"]
},

{
		"title": "Meta Cognition Framework",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/meta-cognition-framework/",
		"content": "MIA -- Metacognitive Introspective Awareness -- is the ability to be aware of the state and activity of the mind continuously. That is, the awareness of the mind as the mind carries on with doing something, e.g. watching the breath\n\nThis is a favorite concept from The Mind Illuminated, one of my favorite mindfulness books. In other words, watching the mind as the mind watches the breath.\nDoing this over and over again, I have noticed an interesting framework to categorize your thoughts and mind-wanderings while meditating, or even in day to day life. We assign 3 properties to each thought that mindlessly pops up:\n\nTime: is it about the past, the future, or present?\nFeeling: Is it a feeling of aversion or craving for something?\nSubject: Is it about you, or the outer world.\n\nBased on this, one could build a 3 dimensional space for thoughts, where you have.\n\nI was expecting to write this bit for myself with a conclusion to assert that a peaceful state of mind is one that is always in the center of this chart, but I am less sure about that and leave that open. Nonetheless the framework has been very useful to me in developing further MIA.",
		"tags": [ "note"]
},

{
		"title": "My Thoughts On Iran's Political Situation in 2022",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/my-thoughts-on-iran-s-political-situation-in-2022/",
		"content": "I started writing this on the 27th of September 2022 and ever since the situation, and my opinion has slightly changed.\n\nWhat I intend to do here\nBreezing over Iran's social media and news these days, the environment is filled with emotions. Opinions are flying by, with everyone telling what others ought to have done or said. I understand why that could be, but I want to insist that I am not here to convince anyone of anything. I am merely writing down some opinions I hold for the sake of posterity.\nMoreover, I entirely agree that some of my opinions might not be exactly on-par with what fellow Iranians think, and I want to emphasize why I think that's the case before going further.\nThe first reason for my unorthodox opinions is perhaps my background and current living situation, which I cover in more detail in the next section.\nSecondly, we are highly social animals, and the desire to be part of a tribe is deeply rooted in us. Similarly, the feeling of being ostracized is extremely discomforting. Ever since the emergence of this movement, I have found myself facing a dilemma:\n\nShould I also indulge in being active online, be loud and bold, be part of the movement, and feel part of the tribe.\nOr, keep my head above water, and only do something if I wholly think of it as being beneficial.\n\nTruth is, every time I came close to choosing option number 1, I'd realize that I am not doing it because I really think it is useful. I am, instead, doing it either out of the desire to be &quot;part of the movement&quot;, or &quot;fear of being judged if I don't&quot;, neither of which is a correct reason to do something.\n\nNot to be mistaken, I have tried to play more role in helping the liberation of Iran by increasing awareness about it, mostly in person, within the circle of my friends, and have participated and aided local protests where I live. I do not face the same dilemma as above while doing such acts.\n\nThis situation has led me and my opinions on the matter to be somewhat disconnected from the mainstream narrative, which contributes to my opinion being perhaps unacceptable to the majority.\nThirdly, to put it shortly, I strive to not act emotionally under any circumstance, and you should be able to see traces of this in most of my comments. I strongly think we, both individually and collectively, come to better conclusions if we think less emotional and more rational. If you think otherwise, we can agree to disagree on many things.\nWhere I am coming from\nFirst, let's establish who I am and where I am coming from. I am raised in a fairly open-minded middle/upper class family in Iran. I was never highly exposed to Iran's brainwashing propaganda, Islam, or anything like that. Likewise, I never distinguished Iran's regime as a rightful one. That being said, I must also confess that I was never directly annoyed by this regime either. Even though my teenage years were the start of the decline of Iran, I was mostly capable of having a good life. This was in part due to my family's above-average financial situation (which was deteriorating at the time), and the fact that I studied compute engineering, I liked it, and put a lot of effort into it. Consequently, there were plenty of job opportunities for me as a student, earning at least some money. In some sense, while some of my friends were in a &quot;there's nothing to achieve in this country&quot; mentality back in e.g. 2015, I was happily swimming against the current. To some extent, I hold the same opinion today as well. In short, I am coming from a position of privilege.\nNext, looking at where I am now, writing this. I have been away from Iran for almost 5 years now, and I am even more independent of it. Yes, Iran's regime has gotten ever so more brutal over the years, but I have also moved away further, and I am objectively less affected by it.\n\nAs a side note, the PS flight was taken down two days after I flew out of Iran in early 2020. Yes, that was a bit close, but I still happily consider myself very independent of Iran's politics.\n\nLastly, I have, over the years, never really benefited particularly from Iran's regime, or never really grown fond of it in any way either. I did believe in the reformist movement of Iran a decade ago (and perhaps even today consider it the better choice between &quot;bad and worse&quot;), but all in all I don't see have any reason to defend Iran's government and regime. For the remainder of this writing, if I criticize the opposition of Iran, please be aware that I do not mean to imply any sort of approval for the existing order.\nAll in all, I consider myself to be in a spot where I can cast an unbiased opinion on the situation of Iran, which can be unique. To recap, I am neither benefiting from nor directly harmed the current regime in Iran. I follow the news, but not enough such that I can't keep both feet on the ground. I entirely agree with the reasons that the people on the street protesting have, but I don't share the emotions with them as much. Whether an opinion coming from such a position like mine is worthy of anything or not, is up to you.\nThe Good\nThe uprising in Iran is the consequences of what the current regime has done over the last few decades. It is not the first of its kind either, and there has been periodic events such as this one ever since 2009's green movement, if not earlier. The living conditions in Iran have declines rapidly over the years, the international presence has gotten worse and worse. All of this justifies a &quot;change&quot;, and is not anyone's wish to see it continue.\nAlso, Iran is being ruled by people with radical religious beliefs, and putting a stop to that is something that I hope to see both in Iran and globally. I fully hold the right for any religious person to practice what they believe, but imposing it forcefully on others is just none-sense. I insist on the forceful part, because Iran is evidently no longer majority Muslim.\nAdmittedly, I don't want to talk about the &quot;Good&quot; part much further, because it is self-evident. It is the uncontroversial part. Of course, I wish Iran would suddenly change and become a better and free and prosperous country. Of course, I wish women and men would both have equal rights and freedom. Of course, I agree that the current regime does not even show any sign of hope for the aforementioned. And a protests/revolution is seen as a &quot;light at the end of the tunnel&quot;.\nThe Bad\nWhatever you want to do, you will do it better if you have a calm mind.\nI sometimes see a narrative that is proudly and boldly spreading &quot;look how miserable I am because of this&quot;, and is harshly criticizing anyone who dares to say &quot;yeah, times are hard, but I am doing okay&quot;.\nIt is entirely understandable that certain people might have a hard(er) time coping with the ongoing events, and sharing it online is perhaps helpful[1]. Nonetheless, I see two important facts here:\n\nWe all deal with different situations in our own way. If someone is dealing with it with less misery, it does not have much to say about their opinion and stance on the matter.\nIf we want to optimize for effectiveness, almost without a doubt, a balanced mind is more effective at making any sort of decision than an unstable one. For example, if you want to write a tweet and post it, you would probably come up with a better, more catchy, more viral tweet if you are calm.\n\nSo, while times are hard, I think we should embrace wellbeing more, and support each other to all feel better, less affected, and less unhappy about the situation, while combating it. Then, we would both feel better as individuals, and I hope we can come to a better outcome collectively.\nThere is nothing exciting about the violence involved.\n![[rings-of-power.mp4]]\nI was recently told by a very close acquaintance of mine: &quot;Yeah, if you feel down, I can send you this video where the people beat the shit out of that other guy (the other guy being a &quot;basiji&quot;), see it, and you feel better&quot;.\nWhen I heard this, I only nodded and smiled, but I really find it disturbing. This is fucked up. My friend should not enjoy s eeing others being beaten up so much, regardless who is beating up whom. Yes, that friend of mine can say &quot;Look, the situation has traumatized me so much that ...&quot; but I honestly think this is an excuse. Wishing to invoke violence on others is nothing to feel happy about, and if you are in a spot where you do feel happy about it, you might have indulged too much into emotional sentiments such that it has blinded your thinking and (more importantly) morality altogether.\nI am aware that the police in Iran does deploy force frequently, and it makes perfect sense for people to use force for defense. I am sorry to say this, but the harsh, sad, cold reality is that anything beyond this makes the attacker be of the same nature as the person being attacked.\nMoreover, while I think this is not a strong argument anymore, every instance of violence from the people towards the government agents will be used as propaganda and and reason for more suppression. So, I think it is wise to use the minimum amount of violence.\nLastly, I think this will set a very grim precedence for what the Iran's 2022 &quot;revolutionists&quot; are willing to do. Do they have higher standards regarding maintaining peace? or are they the other side of the same coin?\n\nWe only seem to respond in kind, an eye for an eye only leaves us blind.\n\nMob Mentality. Radical Polarization\nI am seeing a mirror of something that you can also see in the western world, one that I respectfully disagree with, in Iran as well. Namely, a mob mentality of loud people on social media, roaming around telling others what they should say, think, post, and hashtag, and what not. This, in effect, creates a sense of fear, where individuals feel the fear of being left out if they don't join the mob, i.e. if they also don't share the same hashtag, or buy into the same opinion. This approach is being weaponized by both the right and left-wing political movements of modern western nations as well.\n\nAnd this exacerbates the personal dilemma I mentioned in the first section.\n\nIn my opinion, this is not a good approach, regardless of which ideology you are propagating. Mainly, this approach forces people to take sides based on fear and reactions, not based on thoughtful assessment. In the long term, this creates more schisms, radical mindsets not coping with one another, and deteriorates the movement, in my opinion.\nFor example, the current sentiment in Iran is a unified movement against the current regime, and anyone, especially if they are slightly famous, have to take sides now, and if they remain silent, they are ostracized for it. For people who have very large audiences, this is arguable, yet still incorrect (in my opinion). But seeing this mentality leak toward normal people, expecting them to also silently follow the mob is extremely worrying.\nAbstention is seemingly not acceptable. There is no room for &quot;this is a complicated situation and I have to think about it&quot;. There is no &quot;I have a mixed background and I am confused by all of this&quot;. You are either with US NOW, or you are one of THEM.\nFinishing this with quoting my humble self in a friendly discussion I had with my brother:\n\nbut if we imagine ourself in a position where we can dictate to other what to do, what to say and what to think, we are not much better than that which we are fighting against.\n\nConsequences matter. Things could get worse.\n&quot;anything is better than this&quot; is how most people of Iran think of the existing order. Similarly, I hear &quot;we should first focus on abolishing the existing order and then think about what could replace it&quot;.\nwhile I do see where it comes from, I think it is worrying and slightly short-sighted. I might be a conservative, risk averting person here, I but I cannot start a massive, fundamental process of &quot;change&quot; without having a plan. Imagine you want to refurbish a house, and you just start a hammer and randomly bash items into places, hoping that you eventually get the right items in the right place. Yeah, it might work, but it is quite likely that it might not, and in that case, we might be left with nothing. It is an approach, but we should be aware that it is a risky one.\nInterestingly, I recently learned (through the amazing book Perspolis) how the 57 revolution of Iran was hijacked by one of the forces behind it, namely the Shia clerics, and for many people it did not have the outcome that they intended. With the short-sightedness thinking of the existing movement, I see the possibility of something like this happening being even more. Interestingly, I do recall people arguing, in tweets, that the current revolution of Iran being leaderless and short-sighted is actually a good thing, but I have not seen a convincing debate about it.\nThe Ugly\nFailure to fix Iran in a peaceful way is a both way failure, not just on them.\nIf this revolution succeeds, it will be the win for a group of people (those who supported it), a lose for those who wanted to stop it, and a failure for all of us as a whole, because we failed to put our differences aside and collaborate in a peaceful way.\nYes, the side that currently has the power is more responsible, but this is absolutely a two-way situation. We should remember our failure just as we should remember our victories, and hopefully learn from them.\nChange the game, not the team\nI am worried that, if this revolution succeeds, we are removing a radical, oppressive, intolerant islamic regime, and replace it with a radical, oppressive, intolerant regime. If we are to avoid this, I strongly think that we should think differently. We should not take the same set of rules, and change verbs and nouns in them. We should change the rule itself. For if the rule is flawed, it is only a matter of time until you are again back on the side of it where you don't approve of it.\nA simple example of this is being oppressive. The current regime is oppressive towards us. If we only change the subject, the nouns in this flawed rule, we are only creating a temporary bubble, where, if we are lucky, for some years, we get to to be oppressive towards others. But this is not changing anything. This is the other side of the same coin. The fundamental flaw here is &quot;oppressiveness is allowed and acceptable&quot;, not &quot;we are being oppressed&quot;. There is a MASSIVE difference between the two. In the former, you are eradicating a bad rule, in the second one, you only wish to not be the subject of it.\nThe meta-problem at hand is that we are constantly failing to come to a consensus as a society. This is a problem that exist in Iran today, and trust me, it exist in most developed countries as well. It is only the subject that is different between the two. If we play by the same rule, we are not fixing these meta-problems. People will change, and will fail to agree to one another on other topics as well. The consequences might not be severe as the total disaster that the Islamic Republic as left behind, but the issue will nonetheless be there.\nExistential doubt: What justifies one opinion to be right over the other?\nA brainwashed woman in Iran is willing to live a hard economic life, not taste any freedom, and she wishes for the current regime to survive, so that she can live happily in her bubble. If the regime goes away, should would certainly feel miserable.\nA teenage girl, living with dreams of one day living in a free Iran, where she can have equal rights as men, walk freely in the streets without hijab, thinks very much otherwise, and sees her life as doomed for as long as the islamic state remains in Iran.\nWhich of these people has more justified right to enforce her desire to be happy, and cause the suffering of the other one?\nI sometimes don't know, and I really think it is more nuanced than what I originally thought.\nI originally thought that the young girls is simply the more justified one, because it so appeared to be. Or, because I share the same desire with and don't share the same wish with the brainwashed hypothetical woman. This is my intuitive, emotional opinion.\nBut is that enough?\nA bit more objectively, I already answered my practical answer to this dilemma earlier in this text, that other than having more in common, I would chose to team with the young woman because I think we should live in a society where the rules (which would inevitably at times cause some people to be happier, and some to be miserable in return) to be at least based facts and reality, rather than religious and superstition. This is my rational opinion.\nSo, with all my heart and brain, I am with the teenage Iranian girl here.\nBut I think it is crucially important remind ourselves that in the mind of the brainwashed woman, what the young teenage girl is doing, is probably as bad as what the teenage girl thinks the islamic state is doing to her.\nThis does not change anything about the state of Iran being an absolute nightmare. But at least to me, it has given a new perspective on how I look at others, specially those who don't share the same opinion as me.\nFinal Thoughts: Some Hard Questions\nI will finish my first draft with some questions that I think are thought provoking.\nAssuming the revolution succeeds. Think about the following:\n\nWhat will our history books say? How will we depict the Islamic state that once ruled Iran. Will we be any different toward them, than how they depicted the Pahlavi kingdom?\nHow many opinions and thoughts are going to be indoctrinated and become unquestionable in the post-revolution Iran?\nHow many people will be executed?\n\nAlthough highly questionable as well, as many studies link social media to more depression and isolation. ‚Ü©Ô∏é",
		"tags": [ "note"]
},

{
		"title": "Playlists",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/playlist/",
		"content": "A subset of my Spotify playlists that I am fond of. This page is not organized by language. Some playlists are English, some Persian, some mixed.\n\nMain\nMain two playlist for day to day and work. Both electronic and techno, Teshno being more mellow, and Tekhno being more upbeat.\n\nMisc\n\nK-Hole\nA number of playlists dedicated to journeys induced by Ketamine.\n\nVitamin K is the master playlist I used when partying some old friends and K.\nK-Hole lists are 40-60 minute playlists, dedicated to one theme, having an ideal duration for 1 ketamine intake.\n\nFor Psychedelic Trips\n\nAcid Playlist\nThe following 4 are just some songs categorized by feelings/vibes.",
		"tags": [ "note"]
},

{
		"title": "Rumi",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/rumi/",
		"content": "Love, in Rumi‚Äôs vision, is when the ego or carnal self (nafs) is naught; and such love is realized when the heart is open and the mind is awakened to the reality of life beyond the fictional ego.\n\nRumi, Jalaluddin. Rumi: The Art of Loving (p. 24). Rumi Poetry Club. Kindle Edition.\n\nOn The Pain and Joy of Longing\nI am madly in love with you. What good is advice and preaching?\nI have drunk the killing water of love. What good is a little sugar?\nThey say, ‚ÄúPut chains on his feet.‚Äù\nThe madness is in my heart. What use is the chain on my feet?\ndar esh‚Äôƒ£-e to‚Äôam, nasiihat o pand che suud?\nzah‚Äôr√¢b cheshide‚Äôam, mar√¢ ƒ£and che suud?\nguuyand mar√¢ ke: band bar p√¢sh nehid div√¢ne del ast,\np√¢m bar band che suud?\nYou‚Äôre gone, and in my longing I shed tears of blood.\nThis ever-increasing grief of you makes me cry more.\nNo, I‚Äôm not saying it right! When you left, my eyes went after you.\nSince my eyes have gone with you, how can I cry?\nrafti vaz raftan-e to, man khuun migeryam\nvaz ghosse-ye afzuun-e to, afzuun migeryam\nnay, khod cho to rafti, pe-ye to diide beraft\nchon diide beraft, baa‚Äôd az √¢n chun geryam?\nThe Search\nWithin your living being, there is a spirit. Search for it!\nIn the mountain of your body, there is a jewel. Search for it!\nO, wandering Sufi! If you are looking for it, don‚Äôt seek it outside; it is to be found within you.\ndar j√¢n-e to j√¢niist, bejuu √¢n j√¢n\nr√¢ dar kuuh-e to, dorriist, bejuu √¢n k√¢n r√¢\nSufi-ye ravande, gar to √¢n mi‚Äôjuuyii\nbiiruun to majuu, ze khod bejuu to √¢n r√¢\nO pious seekers who are wandering in the world:\nWhy are you perplexed by a mental idol?\nWhat you are seeking the whole world for,\nseek within yourself. You are already that.\ney ahl-e saf√¢ ke dar jah√¢n gard√¢niid\naz bahr-e boti cher√¢ chonin heyr√¢niid?\nuu r√¢ ke shom√¢ dar-in jah√¢n juuy√¢niid\ndar khod cho be-juuyiid; shoma khod √¢niid\nIn the streets of your own mind, what are you seeking?\nWhy are you washing your eyes with tears of blood?\nFrom head to toe, you are possessed by Truth.\nYet, you remain so ignorant of yourself: What else are you seeking?\ndar ku-ye khy√¢l-e khod che mi‚Äôpuuyii to?\nvin diide be khuun-e del, che mi‚Äôshuuyii to?\naz farg-e sarat t√¢ be ƒ£adam, haƒ£ƒ£ d√¢rad\ney bi‚Äôkhabar az khiish, che mi‚Äôjuuyii to?\nYou have severed our relationship, but I do not despair.\nYou have chosen another lover, but I do not despair.\nAs long as I live, your grief will be my food.\nThere is much hope even in hopelessness; I do not even despair.\nniyam, garche ze man bobridii\ny√¢ bar sar-e man y√¢r-e degar\nt√¢ j√¢n d√¢ram, gham-e to kh√¢ham khordan\nbesiy√¢r omiid hast dar nomiidii\nIf your quest is the soul‚Äôs home, you are that soul.\nIf your search is for a loaf of bread, you are that bread.\nIf you know this secret, you know the secret:\nThat you are seeking, you are that.\ngar dar talab-e manzel-e j√¢ni, j√¢nii\ngar dar talab-e loƒ£‚Äôme-ye n√¢ni, n√¢nii\nin nokte-ye ramz agar bed√¢ni, d√¢nii:\nhar chiiz ke dar jostan-e √¢ni, √¢nii\nWho Am I?\nI am not concerned with to be or not to be.\nI am detached from them both. Yet, that is not bravery.\nThe wonders in my heart don‚Äôt drive me crazy.\nThis is bravery and the real madness!\nb√¢ hasti o niisti-yam, bi‚Äôg√¢negist\nvaz har do boridanam, na\ngar man ze aj√¢yebi ke dar del d√¢ram\ndiv√¢ne nemishavam, ze div√¢negist\nWhen your chest is washed clean from the ego,\nyou will see your true self and your first love.\nYou cannot see your own face without a mirror.\nLook at the Beloved; He is your mirror.\nchon p√¢k shod ze khodi-ye to, siine-ye to khod-bin gardi, ze y√¢r-e diiriine-ye to\nbi √¢yiine ruuye khiish natv√¢ni diid\ndar y√¢r negar, ke uust √¢yiine-ye to\nThe Beloved's Face\nAs long as the face of that enviable angel is imprinted in my heart,\nin the whole world, who is as joyous in heart as I?\nO God, to live this happy life is all I know.\nI keep hearing about sorrow; what it is, I don‚Äôt know.\nt√¢ dar del-e man suurat-e √¢n rashk pariist\ndelsh√¢d cho man, dar in hame √¢lam kiist?\nvallah ke be-joz sh√¢d nemid√¢nam ziist\ngham mishenavam, vali nemid√¢nam chiist\nDie To Yourself\nIf you want your soul to be nourished and fulfilled;\ndon‚Äôt go to sleep. Let the loving fire of the Beloved burn you;\ndon‚Äôt go to sleep. For hundreds of nights you have slept; you know the outcome.\nDo yourself a Divine favor: Tonight until dawn don‚Äôt go to sleep.\ngar miikh√¢hi baƒ£√¢ vo piruuz,\naz √¢tash-e eshƒ£-e duust, misuuz,\nsad shab khofti o h√¢sel-e √¢n diidii az bahr-e khod√¢\nemshab t√¢ ruuz makhosp\nThe secret of madness is the wellspring of wisdom.\nLove‚Äôs madman is also a man of refined knowledge.\nOne who becomes the heart‚Äôs friend through the path of pain,\nbecomes a stranger to himself in a thousand ways.\nsar‚Äôm√¢y-ye aƒ£l, serre diiv√¢negist\ndiiv√¢ne-ye eshƒ£, mard-e farz√¢negist\n√¢n kas ke shod ashen√¢-ye del dar rah-e dard\nba khiishtanash hez√¢r biiganegist\nSo full of yourself, you cannot taste drunkenness;\nattached to your Flesh, you cannot be devoted to the Soul.\nIn the path of love, you will not reach the real being\nuntil you let go of yourself like water and fire.\nt√¢ hosh‚Äôy√¢ri, be taa‚Äôme masti\nt√¢ tan nadahi, be j√¢n parasti\nt√¢ dar rah-e eshƒ£-e duust chon √¢tash o √¢b\naz khod nashavi niist, be hasti naresi\nArt of Living\nWe are lovers of love. Submission to a creed is something else.\nWe are poor ants, collecting love.\nSolomon‚Äôs kingly life is something else.\nIn our longing, we have pale faces and torn hearts to offer. If you desire a fashion market, go somewhere else.\nm√¢ asheƒ£-e eshƒ£iim o mosalm√¢n degar ast\nm√¢ muur-e za‚Äôiifiim o Soleym√¢n degar ast\naz m√¢ rokh-e zard o jegar-e p√¢re talab\nb√¢z√¢rche-ye ƒ£asab foruush√¢n degar ast",
		"tags": [ "note"]
},

{
		"title": "The Price of Change",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/the-price-of-change/",
		"content": "Whether you want to change or not is a delicate question, and depending on the circumstances, and ultimately a decision that can be made, but one thing that has become clear to me over the years:\n\nChange always comes with a price, and that price is an old part of you that you have to let go.\n\nA dominant example, quitting bad habits and adopting new ones. When I quitted smoking cigarettes, I certainly had to let go of a big part of my personality and community. I had to adopt new habits. I had to learn to replace my desire for smoking with other ones. I mainly emphasized on sports (luckily runner's high is very real, and a very good sensation) and to some extent cooking and food. I learned to enjoy being healthy.\nLooking back, if I had only quitted smoking, and had not changed any other parameter in life, it would have not been possible.\nAnother example, a breakup. In my experience, I won't ever be able to move on from someone if I expect/seek to repeat the same experiences, the same inner jokes, and the same dynamics, with someone else. It frightens me, but I know that every time I get intimate with someone, I am letting go of a former side of myself, and developing a new one (assuming a monogamous context).\nConsequently, I don't believe in a permanent &quot;love language&quot;. I think we have a baseline of preferences, which you can call a love language, but more importantly a &quot;love dialect&quot; that is unique to any partner we get initiate with throughout our lives.\nAnd the (sad, but true) twist in all of the above is that, for some of us, possibly those with more of an anxious attachment style, myself included, it is increasingly difficult to let go of things that are dear to us. Acknowledging that I am changing is a double edge sword because as much as experiencing a new version of myself is exciting, letting go of that part of that older part is deeply frightening.",
		"tags": [ "note"]
},

{
		"title": "Uneducated, Unaffiliated, Disinterested",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/personal/uneducated-unaffiliated-disinterested/",
		"content": "The setup is simple: casting an opinion on the matter.\nThere are 3 parameters to evaluate between the person and the matter:\n\nPersonal affiliation: either having some degree of emotional attachment to the matter beyond baseline empathy that most people would have.\nInterest: To be economically attached or not, i.e. skin in the game.\nEducation: having a very high degree of proficiency such that they know the matter at hand almost at full.\n\nAnd the simple conclusion can be that all 3 parameters should be maximal to achieve a good opinion. But is that always the case? some counter examples that I have encountered in my life:\n\nEducation: In many technical conversations between those that are experts in a sub-system, it is super useful to have the opinion of someone who has some degree of high level information, but is not an expert and therefore can provide an out-of-the-box opinion. I have been on both sides of this myself.\nInterest and Affiliation: I am from Iran, and consider myself educated about conditions of living there, but because of living abroad for many years, less so emotionally and economically attached. In other words, I am in a position of privilege compared to those that actually still live in Iran. and I have found myself to sometimes have differing opinions about Iran, and think that this position of privilege can actually be useful (see <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/personal/my-thoughts-on-iran-s-political-situation-in-2022/\">My Thoughts On Iran's Political Situation in 2022</a>).\n\nIn short, what I would conclude is that in a given situation, it is useful to incorporate opinions that are either (somewhat) uneducated, unaffiliated and uninterested.",
		"tags": [ "note"]
},

{
		"title": "Runtime Function Onboarding 2024",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/runtime-function-onboarding-2024/",
		"content": "<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#intro-welcome-to-the-runtime-function\">üëãüèª Intro: Welcome to The Runtime Function</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#intro-welcome-to-the-runtime-function\">üíä The Reality of What We Do</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#intro-welcome-to-the-runtime-function\">üìà¬†Function Portfolio</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#communication\">üì° Communication</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#communication\">üìû Sync</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#communication\">üìß Async</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#async\">üò± Where/How-much to Write?</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#communication\">ü§™ Dumb Questions</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#contributing\">üßë‚Äçüíª Contributing</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#contributing\">üõ£Ô∏è Road to Merging a PR</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#contributing\">üîô After Merging</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#contributing\">üßê Know Your API</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#contributing\">üßπ Be The Housemeister</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#keeping-up\">ü§ì Keeping Up</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#company\">üìç Company</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#company\">üé≠ Culture</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#company\">üî¨ Resources</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">üíé Appendix: Principles For Excellence</a>\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Stability Over Chaos</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Information (de)Centralization and Longevity</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Domain Ownership</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Announce Early</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Don't Be Blocked On Decisions</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Measuring Impact</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Liveness Above All</a>\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#appendix-principles-for-excellence\">Resilience Above All</a>\n\nüëãüèª Intro: Welcome to The Runtime Function\nWelcome to Parity, welcome to the Runtime Function, arguably one of the most important teams within Parity and the Polkadot Ecosystem.\nWhat do we do? We build everything that is needed for the Runtimes of the Polkadot ecosystem to exist. Remember, the runtime is where the application logic of all of our blockchains live. The runtime function is at the moment divided into 3 teams:\n\n(Substrate[1] +) FRAME + XCM: Build and maintain the (mostly) un-opinionated frameworks/SDKs that allows us to build blockchains, runtimes and enable communication between them. All of the aforementioned are part of polkadot-sdk.\nPolkadot System Runtimes: Then, we build applications with Substrate, FRAME and XCM. This includes: The runtime of the Polkadot and Kusama relay-chain, plus all system-chains. The community of Polkadot builds Parachains with all the same tools.\nBridges: Given its proximity to FRAME and XCM, the core developers working on trust-less bridges reside in the Runtime Function as well.\n\n[!info]- Note on Naming\nIn a lot of our communication, we refer to Relay Chain as RC, and System Chain as SC. Moreover, a lot of the system chains are called ‚ÄúSomethingHub‚Äù, which is often abbreviated as *H. For example, AssetHub is referred to as AH.\n\nüíä The Reality of What We Do\nWorking in the above implies two very important self-evident truths about the type of work we do:\n\nWe fly low:* The work we do is meant to interact with value-bearing, mission critical systems that are meant to survive the test of time. This implies:\n\nEmphasis on testing.\nDemand and provide vigilant code review.\nNonetheless, mistakes happen, and it is okay. What is not okay is to repeat a mistake. We maintain a categorical zero-blame mentality, learn from mistakes, make sure it cannot happen again, write a public post mortem, and move on.\n\nWe fly close to end-users/developers*: Most of what we write affects our two major stakeholders: developers (parachains, UIs, and more), and blockchain users.\n\nAlways think about: user-facing code, vs. non-user facing code.\nIs my feature well documented? can someone else use/understand it?\nIs my feature a breaking change?\n\nWe will repeatedly come back to these two points throughout this document.\n\n[!info]- An anecdote about breaking production code @kianenigma\nThe main downtime of Polkadot is partially because of my code. Many collaborated to fix the issue, and we learned countless lessons about how to test our code, eventually leading to the creation of try-runtime-* set of tools, just to name one.\n\nüìà¬†Function Portfolio\nLet‚Äôs take a moment and introduce you to a non-exhaustive list of great things that function is currently working on, in the words of the maintainers themselves:\n\n[!tldr]- Stability\nParity has a history of rug-pulling Polkadot builders with new technology one after the other üôà The Stability initiative is here to stop this. By introducing stable releases (New Release Process), a no-code Parachain node (Omni-node) and focusing generally more on improving existing features instead of adding new ones we are aiming for a smother experience for Polkadot builders.\nOliver, Liam and Kian\n\n[!tldr]- XCM v5\nXCMv5 aims to improve developer and user experience for all cross-chain interactions. Its main features are seamless fee integration, facilities for claiming trapped assets and helper instructions for easier cross-chain transfers. This is the latest evolution of the XCM standard via the open RFC process.\nCisco\n\n[!tldr]- Coretime Broker Pallet\nThis year Kusama and Polkadot transition away from the slot auction model to Agile Coretime. The Coretime Chain is a marketplace where NFTs representing various configurations of blockspace can be bought, manipulated and allocated. Coretime (bulk and on-demand) is now the only way to validate workloads on Polkadot. The broker pallet contains all the logic for the primary market for blockspace, upon which secondary markets can be built and is the main part of the coretime chain. The specification is contained within¬†RFC-1¬†and¬†RFC-5, and you can find out more in our¬†Coretime FAQs.\nDonal\n\n[!tldr]- People Chain\nThe people chain is the place where real world identities are brought onto the blockchain. In other parts of the system (and blockchain in general), a lot of emphasis is put on anonymity; you are an account that interacts with other accounts. The people chain is where you can showcase your real world identity by linking your Polkadot account with various off-chain accounts such as Twitter, Discord, GitHub, email and more.\nThis bridges a gap between on-chain and off-chain knowledge and allows users to introduce information from the outside world and securely use it for various on chain activities.\nGeorge\n\n[!tldr]- Multi-Block Staking\nDiscover Polkadot's innovative validator election method using¬†NPoS. Dive deeper into our efforts to¬†scale the number of stakers¬†nominating on Polkadot. Join us as we¬†migrate staking functionalities¬†from the relay chain to a system parachain.\nAnkan and Goncalo\n[!tldr]- Multi-Block Staking\nDiscover Polkadot's innovative validator election method using¬†NPoS. Dive deeper into our efforts to¬†scale the number of stakers¬†nominating on Polkadot. Join us as we¬†migrate staking functionalities¬†from the relay chain to a system parachain.\nAnkan and Goncalo\n[!tldr]- Multi-Block Staking\nDiscover Polkadot's innovative validator election method using¬†NPoS. Dive deeper into our efforts to¬†scale the number of stakers¬†nominating on Polkadot. Join us as we¬†migrate staking functionalities¬†from the relay chain to a system parachain.\nAnkan and Goncalo\n\nüì° Communication\nüìû Sync\n\nWeekly &quot;Runtime Function Hangout&quot; call.\n\nAgenda curated collectively in calendar invite. If you'd like to encourage others to show up, put your item there.\nCommunicate important decisions in the group chat for those who are not present.\nOptional in general. Join based on your workload, and the agenda.\n\n1-1 with your team lead.\n\n[!tip] Getting To Know Your Teammates\nInspired by what Oliver did when he joined in early 2022, I highly encourage you to setup 1-1 intro calls with all other RF members in the first week or two. Get to know them, what they work on and so on! It will help you settle-in, and give you opportunity to also ask any random questions you have about FRAME, XCM, Polkadot, Parity and so on!\n\nüìß Async\n\nParity forum Polkadot forum.\n\nPrefer accompanying Google docs for discussions that will need lots of revision.\n\nGithub\n\nBuild a system around notifications, you are expected to reply to your @mentions.\n\nElement\n\nEverything under Runtime Function space. Explore sub-spaces and rooms accordingly\n\n[!info]- The Runtime Function Element Space\nThis is an example of who the spaces and sub-spaces in our Element space looks like.\n\n[!tip]- More on Element\n\nPro tip: You can always group a number of chats from different spaces (or no space in particular) into a private space, if you'd like to group chats together and avoid the &quot;Other Rooms&quot; or &quot;Favorites&quot; to bloat.\nBe mindful of joining too many rooms, if it prevents you from keeping up with notifications that actually matter.\nConsider using alternative Matrix clients, if it fits you better.\nElement supports a very simple to setup RSS feed, which can be useful to keep up with things.\nCustom keyword notifications in Element/Matrix are very useful to keep you up to date with certain topics that you feel responsible for.\nMore in the devops wiki. Ask questions in Element/Devops Helpdesk if need be.\nDoc for our last round of element revamp.\n\nWhy do we use element to begin with?\n\nPrivacy-preserving, semi-redundant due to connectivity with other homeservers (so even if ours goes down, people on other homeservers can still interact with the channels they're in). Interoperable (with other chat protocols, due to bridges), customizable/programmable and control over our data.\nErin\n\nüò± Where/How-much to Write?\nA common question around async communication in chats is how &quot;loud&quot; you should be. For example, whether you should talk in big chats, as opposed to DM.\nWe are a fairly small company. Prefer sharing things in broad element groups where most people can see them, rather than small chats with a handful of people. As an example, we have vibrant chats such as:\n\nEngineering General\nFRAME Public\nXCM Public\npolkadot-sdk-docs\n\nThat are used for various discussion topics, requesting reviews and Q&amp;As, and using them is highly recommended.\n\n.. But what if I am too loud, what it I annoy someone, or ask a <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#dumb-questions\"> dumb question</a>?\n\nShort answer: It is not your problem.\nIn an async environment, it is much easier to be under-heard and under-share, then the opposite. Therefore, it is safer to optimize for over-sharing, and only adjust if necessary.\nIf your over-sharing and are actively annoying anyone, it is their responsibly to give you that feedback, and you should adapt if the feedback is reasonable. But if you are silently under-sharing, it is much harder to identify it as an issue and recover from it. I suggest always preferring to share something where the most broad audience can see it, unless you conclude otherwise for some specific reason.\n\n[!example] Async Communication 101\n\nAdjust your workflow (as much as possible) such that you are NOT blocked by other's not replying to you immediately. Explore a reasonable degree of multi-tasking.\nBe concise and to-the-point in conveying your message. The &quot;no hello&quot; is a good example üòâ.\nPrefer sharing things where most poeple can see it.\nPrefer sharing things where it has the most longevity.\n\n(See <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#information-de-centralization-and-longevity\">Information (de)Centralization and Longevity</a>)\n\nü§™ Dumb Questions\nParity has an interesting attitude towards this. We have a room specifically called &quot;Parity Dumb Questions&quot;, to remind you that there is no such thing as a dumb question[2].\nLet's be honest: Web3 is a complicated space, for both engineers and non-engineers. Only a few are knowledgeable enough to have a high level understanding of everything. Most of us are new in this space. Moreover, this space (and Parity) move really fast. What you know today might need an update in 6 months.\nSo, in short: There is a million things to (re)learn, and asking those who know better than you is the most wise thing you can do. As the saying goes: &quot;The only dumb question is the one you don't ask&quot;.\nBut, there is a few notes that you should keep in mind about questions:\n\n[!info] Asking Questions 101\n\nFirst, while we assert there is no such thing as dumb questions, there is such a thing as a lazy question. That is, when you are told to &quot;do x&quot; by person A, and then you go to person B and as &quot;hey, how do I do x?&quot; This might be seen as a lazy question, and not so cool to do it often. A good question should indicate that you have put some effort into the matter yourself, and are now seeking validation of your progress.\nAvoid the xy problem.\nSee <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#information-de-centralization-and-longevity\">Information (de)Centralization and Longevity</a>. In short, once you have asked a question, and have received your answer, think about how you can make this knowledge accessible to more people, and for a long time.\n\nüßë‚Äçüíª Contributing\n\n[!info] Public Contributor ~ Parity Employee\nThe information in this section is kept at minimum, as majority of what you have to know to contribute inside of Parity also applies to external contributors, and is already documented for them. Whatever is not documented, should be added to the same public medium and NOT be exclusive to a private Parity onboarding note.\n\nüõ£Ô∏è Road to Merging a PR\nFor your contribution, consider reading everything in our docs/contributing folder. What you do here is more or less what we expect external contributors to do:\n\nProper PR description, as per PULL_REQUEST_TEMPLATE.\nAdhering to everything in CONTRIBUTING.md.\n\n[!info] The stale PR issue\nA common issue that might arise is for you to open a PR, and for it to not receive the reviews you hoped for. While we are all obliged to spend a part of our time reviewing each others' code, we all tend to be busy as well. Opening a PR, yet silently letting it sit stale for a month is your foremost your shortcoming, not others'. Be vocal, both in public and with your manager/TL to ensure your PRs get the amount of review they deserve.\n\n[!info] Release and Audit Rooms\nTwo critical pieces of information about contributing to polkadot-sdk that is gated within Parity is being present in the release and audit Element rooms. These rooms ensure you are up to date with the latest of the two respectively, and can plan accordingly. Ideally, these processes should also move towards being as public as possible.\n\n[!tip] Editor Tips\nBe sure to read this (and this private) great guide about what editor setups we often use.\n\nüîô After Merging\nWell, your PR is finally merged. Are we done? More often than not, no.\nYet again, a lot of this goes back to the dual realities (<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#the-reality-of-what-we-do\">üíä The Reality of What We Do</a>) of our team: Flying low and flying close to end users. This implies that, before kissing and saying goodbye to a merged PR, you need to reflect on the following:\n\nTest-network Runtime Upgrade: Fairly soon after your PR is merged, it will be enacted on our test-networks, most notably Westend. This is your best opportunity to do your final round of (live) testing. Ask yourself: Is everything alright in Westend? How can I test my feature further?\nRC/SC Runtime Upgrade: Days, weeks or months after your PR is merged, it might finally land in in the RC or one of the SCs[3]. This is another milestone for testing: Did everything go smoothly? The release process of RC runtimes, and their enactment is fully public and managed by the Polkadot fellowship, so you can easily tag along.\nDeveloper Community Impact.\n\nDid any UIs break because of your feature? could we have communicated better with them?\nAre any new documentation pages needed? (easier to forget:) Are any of the existing ones outdated now? Maybe one of the most visited StackExchange questions needs being updated?\nWas your PR description good for downstream teams to be able to adopt the feature?\n\nMonitoring and Data\n\nDevops Wiki: A lot of great resources about our infra, and how to do monitoring of parity run nodes, validators, logs, and more!\nDotLake (public)\nMetabase (private)\n\nüßê Know Your API\nAs a final example to cement <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#the-reality-of-what-we-do\">üíä The Reality of What We Do</a>, let's consider the difference between two features, in order the highlight how important it is for you to be able to answer one question:\n\nIs my code end-user-facing or not?\n\nConsider:\n\nAn optimization made to the networking of the parachains protocol. This will improve the performance of parachain networking by 10%, without any action needed by anyone, as soon as the crate is released and updated. In such cases, be my guest, and ignore the majority of this rant. Your work is not directly affecting end-users. You can still demonstrate competence by adhering to everything said here, but a lot of it is not relevant.\nContrary, consider the following:\n\nWorking on a new major revision of any of the FRAME modules used by Polkadot end-users, such as staking, proxy or multisig.\nWorking on any feature that is expected to be integrated into wallets, exchanges, or other 3rd party software.\nChanged an API in FRAME or Substrate that might make existing code that compiles no longer compile.\n\nEven more pesky, existing correct code might still compile, but be incorrect if some upgrade path is not followed.\n\nOur PRDoc system's audience section is a good framework to help you think about the final audience of your code.\nMoreover, new release process, with its emphasis on semantic versioning, will force you to think about this to a high extent, but it does not encapsulate the full magnitude of the above. For example, in your PR, you might be causing major bump to many crates, but only one of the crates is something that actually matters to the main audience, noted in the PRDoc.\nüßπ Be The Housemeister\nWe are a true open-source project, and our entire issue-tracking system is what we publicly have in Github. While our issue list has grown very large and it is unlikely that our team can clean it up, we can keep issues that are relevant to our team tidy, well described and properly labeled. Practically:\n\nKeep the issues that you have created tidy.\nKeep an eye on the issues opened by external contributors (they are auto-labeled as unconfirmed) and see if you can triage them. We sometimes get important bug reports from external users and the only way to do so\nSimilarly, you can have some degree of supervision upon areas of our StackExchange.\nKeeping a good list of mentor\n\nNeedless to say, most of this is not relevant to you at day-0, but it will become as you grow to be an expert in some domains.\n\nü§ì Keeping Up\nIn reality, you are joining the Polkadot ecosystem, not just Parity. And there is a lot happening in Polkadot! Some links for you to explore based on your interest in various topics:\n\nGovernance: Polkassembly, SubSquare, AAG.\nThe Kusamarian\nCommunity Element Chats:\n\nWatercooler, Direction, and Validator Lounge if you want more exposure\nAnd Kusama Watercooler, Direction.\n\nNewsletters: DotLeap.\nBill Laboon's Daily Digest.\nPolkadot Fellowship\n\nPublic Element Room 1, Room 2.\nGithub org, including manifesto.\n\nRust: This week in Rust, Rust in Blockchain.\nI personally like to follow these for general crypto stuff:\n\nDecrypt.\nPodcast: Defiant, Bankless and Unchained.\nCoinBureau‚Äôs weekly crypto update videos every Monday (yes, but it is good to know what the mainstream thinks..)\nBloomberg Crypto reports, Matt Levine Money Stuff.\n\nOfficial Polkadot Ecosystem Room in Element ‚Äî a fairly active chat with many parachain teams.\n\nüìç Company\nA few high level notes about the company, and not just the RF.\nüé≠ Culture\nYou will learn about the Parity culture in your onboarding, but here‚Äôs some old-but-still-relevant material from former culture decks.\nFirst, here‚Äôs a little screenshot of an all-hands talk about vision of Parity in 2019 which I still stand by. You can find the full talk here (most of it is not super relevant anymore).\n\nA culture talk from Gav in the 2022 Tenerife retreat. This snippet of this talk is among my favorites:\n\nYou can find the culture deck from 2022 here. If I wanted to name one slide from it that you should think about the most, it would be:\n\nThe majority of the efforts of your team lead, and this document is to help you toward achieving the status mentioned in the above sentence.\nüî¨ Parity XP\n\nParity XP contains links to everything else that is part of the internal org-wide onboarding.\n\nüíé Appendix: Principles For Excellence\n\nPersonal opinion of @kianenigma follows.\n\nThese are ideas that I believe will help you be excellent, and help others be the same. This is an opinionated re-iteration of some competencies that are noted in our CultureAmp.\nStability Over Chaos\nA theme in Polkadot in 2024 has been Stability. We used to say: &quot;We write code faster than we can write about it&quot;. Parity has always been a company known for engineering excellence, at the cost of lots of breaking changes. This all used to be cool, but not anymore. The best number of lines of new code to deliver a new feature is 0. The simpler, less-breaking a solution, the more elegant it is.\nInformation (de)Centralization and Longevity\nAs noted in <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#dumb-questions\">ü§™ Dumb Questions</a>, we acknowledge that there is a lot to be learned for all of us in this space. The underlying issue is that there is a lot of information centralization. Veterans in the space know a lot of things, yet the path for new joiners to learn the same is unclear and bumpy, and the constant evolvement of the space does not help.\nThe rule is: Once you have learned something, think about how you can make sure it is accessible to more people, and for a long time.\nThe best example of this is something that I personally do: Policing people to move good conversations and Q&amp;As from a small Element room to more permanent places. Every time I see a good technical question asked in our Element:\n\nIf this question is already asked in StackExchange, or in any of our docs, then I don't need to rewrite the answer. I will paste a link and move on.\nIf not asked, and I know the answer, I don't answer the question in chat, but instead ask the person to ask it in StackExchange, and only then answer.\n\nThis is merely one example, but the mentality it demonstrates is applicable to many situations. &quot;If you had to spend 1h answering a question, how can you make sure the next time someone has the same question, it takes them 1m?&quot;?\n\n[!info]- A Great Example\nIn H12024, Liam was working on the release process. There entirety of the acceleration department had constant questions about the status of this work, and how it would affect them.\nKeeping an eye on chats and answering question promptly would have been a responsible thing to do by Liam, but he even went a step further and recorded a quick Loom + FAQ and posted it in the forum. This ensures a lot of questions are answered all at once + it is not list in the history of some chat. This is a great example of working towards <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#information-de-centralization-and-longevity\">Information (de)Centralization and Longevity</a>.\n\nDomain Ownership\nTake radical and proactive ownership of what you have built, and be proud of it. We highly encourage engineers to grow a vision for what they are working on, and influence its future. This gives you a high degree of freedom to not only have a say on how some feature is implemented, but also which features are worthwhile.\nBut, freedom comes with responsibility:\n\nAs the owner of a domain, both internally and externally, you need to make yourself known as the owner, so that others can find you.\nFollow your domain carefully, participate in conversations around it, answer questions.\nYou need to interact with experts and higher level leaders both in Parity and the community to share your ideas and come to a conclusion about the future\n\n[!example]-\nFor example, if you aspire to be the owner of a domain, you would try to create notifications to be informed about all activity around this topic in the Polkadot forum, SE and twitter, and participate accordingly.\n\n[!info] Not For Everyone\nOf course this attitude of wanting a higher level of ownership and responsibility is not what everyone wishes, and is generally expected for an L5+ engineer.\n\nProper off-boarding and handover is also an important aspect of ownership. We move companies, teams, or sometimes, put a stop to an initiatives for various reasons. But what happens to the part of the project that is already out there? Should we bring it down? should we archive a repo? Prevent letting initiatives going stale.\nAnnounce Early\nIn tandem to the above, try and announce[4] what you are working on early, and embrace feedback. When you start an initiative, announce the vision, then link to a public Element room if one exists where one can join for a more in depth discussion about the project.\nDon't Be Blocked On Decisions\nSometimes it is hard to come up with an answer to an decision. Unless if it is a very irreversible one, you can do the following: Share what you think is the best approach, and if after x weeks no objections comes, you execute.\nMeasuring Impact\nThe impact of what we do, specifically for end-user facing work (as defined in <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/runtime-function-onboarding-2024/#know-your-api\">üßê Know Your API</a>), is NOT how many PRs we manage can merge into polkadot-sdk, but rather how much our code is being user by end-users or developers.\nLiveness Above All\nParity is a collective contributing to Polkadot. Most of us are part of other collectives that contribute to Polkadot in other ways, such as ChaosDAO or the Polkadot fellowship.\nMaking Polkadot successful is, one way or another, our main mission. Therefore, important bugs and existential issues that might arise should never be be discarded as &quot;it is not the task I am working on, so not my problem&quot;. If something important comes up that is possibly an existential threat to Polkadot, it is everyone's first priority.\nResilience Above All\nWe proudly consider ourselves as one of the (few) companies that is &quot;doing blockchain right&quot;. In that, we are not in this for a short term profit, for capturing a hype or anything other than making the true Web3 vision come to fruition.\nAnd what is that Web3 vision: That we need to build the tools necessary to be able to build resilient systems that can survive the test of time. Blockchains are one important type of such systems.\nWe are also proud to be on the forefront of scalability of Blockchains, without sacrificing Resilience, something that we think other blockchain systems have deliberately opted to sacrifice.\nWith all that said, what is practically means for us, is that when we are developing runtimes and blockchains, making sure the system is sound, secure and sybil resistance is non-negotiable.\n\n[!Info]- But What About UX?\nHistorically, we have also sacrifices a lot of UX for resilience. We do wish to put a stop to that, and build more user-friendly systems going forward. That being said, we should similarly openly explore ways to improve UX without sacrificing resilience.\n\nLearning Resources\n\nPolkadot Blockchain Academy\n\nRecordings\nslides\n\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/polkadot-s-build-horizon/\">Polkadot's Build Horizon</a>: Contains some up-to-date learning resources\n\nWrapping Up\nOkay, this was long! thank you for reading! for any feedback, reach out to @kianenigma.\n\nNotionally part of another team called node-sdk, but we contribute to the node side of Substrate as well. ‚Ü©Ô∏é\n\nBecause if all questions are dumb questions, then no questions are dumb questions. ‚Ü©Ô∏é\n\nThis is usually done in two steps: first, a release made by the Polkadot fellowship, and a runtime upgrade being authorized by the community. Parity coordinates these operations, but does not have full control over them. ‚Ü©Ô∏é\n\nAnnouncements should generally be done in the Polkadot forum, unless if for some reason it needs to be private, in which case it can be done in the Parity Forum. ‚Ü©Ô∏é",
		"tags": [ "note"]
},

{
		"title": "Demystifying JAM",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/tech/demystifying-jam/",
		"content": "The following is a ground-up explanation of Polkadot 1, Polkadot 2, and how it will evolve to JAM. It is targeted towards a technical audience, but more so those that are not very familiar with Polkadot, but have a good high level understanding of the Blockchain space as a whole, and possibly one other ecosystem at a technical level. I believe reading this can be a great prelude before reading the JAM graypaper.\nBackground Knowledge\nThis article makes use and assumes familiarity of the following concepts:\n\nDescribing a blockchain as a state-transition function.\nUnderstanding of what is &quot;State&quot;\nEconomic Security and Proof of Stake.\n\nPrelude: Polkadot 1\nFirst, let's take a moment and write down what I consider the top novel features of Polkadot 1.\n\nSocial:\n\nPolkadot is the biggest DAO. the only network that does fully onchain, self-enacting governance, including fork-less runtime upgrades.\n\nTechnological:\n\nShared security, sharded execution.\nUse of a WASM-based meta-protocol. Storing the code of the blockchain in the state as byte-code. This enables most upgrades to be fork-less, and supercharges Polkadot to be, not only sharded, but heterogeneously sharded. More on this in <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/demystifying-jam/#heterogenous\">Heterogenous</a>.\n\nLet's dive further into sharded execution and what we mean by it.\nAll About Cores\n\nFor now, we are talking in the context of an L1 network that hosts other L2 &quot;blockchain&quot; networks, much like Polkadot and Ethereum. Therefore, the words L2 and Parachain can be used interchangeably.\n\nThe core problem with blockchain scalability can be stated as: There exists a set of validators, who's execution of some code can be trusted through a combination of crypto-economics and proof-of-stake. There is a limited number of such validators, and we cannot indefinitely scale the number of validators. Therefore, the system as a whole is not scalable so long as we force all validators (re)execute everything at all times.\n\nThe above demonstrated a single-threaded blockchain. Inputs (i.e. blocks) are processed by all network validators, one by one.\nIn such a system, if the L1 wants to host further L2s, all validators have to now re-execute the work of all L2s as well. Obviously, this will not scale. Optimistic rollups are one way to circumvent this issue, in that re-execution (aka. fraud-proofs) only happen if someone claims a fraud to have happened. SNARK-based rollups circumvent this by leveraging the fact that verifying some SNARK proof is significantly cheaper than generating it, and therefore it is reasonable to allow all validators to verify a SNARK proof. More about this in <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/demystifying-jam/#appendix-scalability-space-map\">Scalability Space Map Appendix</a>.\nA naive solution to sharding is to merely split the validator set into smaller subsets, and have this smaller subset re-execute L2 blocks. What is the issue with this approach? we are sharding execution and economic security of the network. The security of such an L2 is less than that of the L1, and the security drops further and further as carve up the validator set into more shards.\n\nCŒ©ontrary to Optimistic Rollups that cannot afford re-execution at all times due to architectural shortcomings, Polkadot can have a subset of its validators re-execute L2 blocks, whilst providing sufficient crypto-economical evidence to all network participants that the veracity of the L2 block is as secure as if the entire set of validators had re-executed it. This is possible through the novel (recently formally published) ELVES paper.\nIn short, one can see ELVES as &quot;Pessimistic Rollup&quot; mechanism. Through a few rounds of validators proactively asking other validators if an L2 block is valid, we can reach an extremely high probability that the L2 block is valid. Indeed, in case of any disputes, very soon the entire validator set is asked to participate. This is explained in detail in an article by Rob Habermeier, Polkadot Co-founder.\nELVES is why Polkadot can have two presumably mutually exclusive properties: &quot;Sharded Execution&quot;, with &quot;Shared Security&quot;, the main technological outcomes of Polkadot 1 when it comes to scalability.\n\nNow, moving on to the &quot;Core&quot; analogy.\nAn execution-sharded blockchain is very much like a CPU: In much the same way that a CPU can have many cores that execute instructions in parallel, Polkadot can progress L2 blocks in parallel. This is why an L2 on Polkadot is called a Parachain, and the environment in which the smaller sub-group of validators re-execute a single L2 block is called a &quot;core*. Each core can be abstracted as &quot;a group of validators working in coordination&quot;.\nYou can imagine a single-threaded blockchain as one that ingests a single block at any given 6s time-slot, while Polkadot ingests 1 relay-chain block, and 1 parachain block per core, per time-slot\nHeterogenous\nSo far, we only talked about scalability, and that Polkadot provides sharded execution. It is important to note that each of Polkadot's shards is an entirely different application[1]. This is achieved through the usage of a bytecode-stored meta-protocol: A protocol in which the definition of the blockchain is stored as bytecode in state of the blockchain itself. In Polkadot 1 WASM was used as the bytecode of choice, and in JAM, <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/demystifying-jam/#pvm\">PVM</a> is the bytecode of choice.\nAll in all, this is why Polkadot is called a heterogeneously sharded blockchain. Each of the L2s is an entirely different application.\n\nPolkadot 2\nA big part of Polkadot 2 is about making cores more flexibly use-able. In the original Polkadot model, a core could have been rented for 6m-2y at a time. This is suitable for resourceful businesses, but less so for small teams. The feature that enables Polkadot cores to be used in a more agile way is called &quot;agile coretime&quot;.\n\nPolkadot 2, among other features, is unfolding as we speak, and not much further needs to be said about it here.\nInside Core vs. On the Chain\nTo understand JAM, it is first useful to look into what happens in a Polkadot core when an L2 block comes in.\n\nThe following contains a lot of simplification.\n\nRecall that a core is constituted primarily from a group of validators. So, when we say &quot;some data is sent to the core&quot;, it is gossiped to this group of validators.\n\nAn L2 Block + a subset of that L2's state is sent to the core. This is all the data that is needed to execute the L2 block[2].\nSubset of validators, those that constitute a core, re-execute the L2 block and proceed with further consensus related tasks.\nThe core validators make the data needed for re-execution available other validators (outside of the core). Further validators might decide to re-execute this L2 block based on ELVES rules, and they need the data to do so.\n\nNote that all of the operation so far is outside the the Polkadot's main block and state transition function.\n\nEventually, a small commitment of the L2's latest state becomes visible on the main Polkadot relay chain state. This operation, which is much cheaper than the actual re-execution of the L2 block, unlike everything else so far, affects the main Polkadot state, becomes visible in a Polkadot block, and is executed by all Polkadot validators[3].\n\nLet's deduce some new ideas from the above description.\nFrom 1, we can learn that there exists a new type of execution in Polkadot that differs from normal blockchain state transition function. Typically, when all validators of a network execute some work, and as the outcome the main blockchain state is updated, we call this an on-chain operation. This is what happens in step 4. Yet, what happens inside a core differs from this. We call this novel type of blockchain computation in-core execution.\nNext, from point 2 we can deduce that Polkadot already provides a native Data-Availability (henceforth DA) layer, and L2's automatically use it to keep their execution evidence available for some period of time. Yet, the blob that can be posted to this DA[4] layer is fixed, and it is always the evidence needed to re-execute an L2 block. Moreover, parachains never read from the DA layer.\nUnderstanding the above is foundation of understanding majority of what JAM does. To recap:\n\nin-core execution: What happens inside a core. Abundance, scalable, yet as secure as on-chain execution through crypto-economics.\non-chain execution: What happens in all validators. Secure by nature. More expensive and constrained, as everyone is executing everything.\nData Availability: The ability for Polkadot validators to commit to having some data available for some period of time.\n\nTODO: animation\nJAM\nWith the understanding gained in the previous section, we can smoothly transition into what JAM is.\nJAM is a new protocol, heavily inspired by Polkadot, and fully compatible with it, aiming to replace the Polkadot Relay Chain and make the usage of cores radically more unopinionated[5].\nJAM builds on top of <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/demystifying-jam/#polkadot-2\">Polkadot 2</a>, in that it tries to make Polkadot cores more useful, but in ways radically more flexible and unopinionated manner than agile-coretime.\n\nPolkadot 2 makes the deployment of L2s radically more flexible on cores.\nJAM is all about deploying any application on Polkadot cores, even those that don't resemble a blockchain.\nThis is achieved through exposing all the main 3 primitives discussed above to programmers, namely: on-chain, in-core, and the DA layer.\n\nMore verbosely, in JAM, cores are exposed at a much more flexible manner to:\n\nAllow both the work that is being done in-core and on-chain to be fully programmable.\nAllow arbitrary data to be read-from and written-into the Polkadot DA layer.\n\nBoth of these stem from one key observation: Polkadot cores are amazingly powerful, why just use them to run L2s? they can run anything!\nThis is a foundational description of what JAM aims to be. Needless to say, a lot has been simplified here, and the protocol might still evolve.\nOn top of this foundation in mind, there are a few other aspects of JAM that now we can describe in the coming sections.\nService and Work Items\nThis is why in the context of JAM, what used to called an L2/Parachain block/transaction is now called Work-x[3:1]. Moreover, the &quot;application&quot; to which a work belongs is called a Service. Both terms of deliberately chosen to be generic enough to encapsulate use-cases beyond a blockchain/L2.\nA service is described by 3 entry points, two of which are fn refine() and fn accumulate()[6]. The former describes what the service does in-core, and the latter describes what the service does on-chain.\nFinally, the name of the two entry-points is why this protocol is called JAM: the Join Accumulate Machine. Join is fn refine(), when all Polkadot cores do a lot of work, all in parallel, for different services. Accumulate is when they are all accumulated/folded into the main JAM state. This is the on-chain execution part.\nSemi Coherence\nRecall from existing material around Polkadot's language of choice for enabling parachain communication, that all such communication is asynchronous. That is, a message is sent, and its reply cannot be awaited upon. Asynchrony is a major drawback of systems that are permanently sharded, such as Polkadot 1 and Polkadot 2 and the existing parachain model.\nYet, as described in the graypaper section 2.4, a fully coherent system that enabled synchrony can also only grow so much without compromising.\nJAM, through introduction of multiple properties, introduces a new middle-ground: a Semi-coherent system, one in which sub-systems that communicate often have a chance at creating a coherent environment with one another, whilst not enforcing the entire system to be coherent. This is best described in this interview with the Gavin wood:\n\nThe properties that enable this are:\n\nAccess to both a state-less, parallel in-core execution where different services can only interact synchronously with other services that reside on the same core in that particular block, and on-chain execution where a service has access to the outcome of all services across all cores.\nJAM does not enforce any particular scheduling of services. Services that talk to each other frequently can create an economic incentive for their sequencers to create WorkPackages that contain WorkItems of services that often communicate, which enables them to reside in the same core, and in practice, talk to each other as-if they were in a synchronous environment.\nMoreover, JAM services have access to the DA layer and can use it as an ephemeral, yet extremely cheap data layer. Once a data is placed in the DA, it is eventually propagated to all cores, but is guaranteed to be available in that same core immediately, and in the next block. Therefore, JAM services, through scheduling themselves into the same core in consecutive block[7], can enjoy a much higher degree of access to data.\n\nIt is important to note that while the above is possible in JAM, it is not enforced at the protocol layer. Therefore, it is expected that certain interfaces are asynchronous in theory, but can act synchronously in practice through elegant scheduling and incentives. One such example in CorePlay, discussed in the next section.\nCorePlay\nPVM\nAn important detail of JAM and CorePlay is PVM. Low level details of PVM are beyond the scope of this article and are best described in the graypaper by the domain experts. Yet, for the sake of this article, we only have to elaborate on a few properties that it has:\n\nEfficient Metering\nAbility to pause and resume execution\n\nThe latter is particularly important for CorePlay, explained next.\nCorePlay is one example of using JAM flexible primitives to create a synchronous and scalable smart contract environment with a very flexible programming interface. CorePlay suggests deployment of actor-based smart contracts directly on JAM cores, and enabling them to enjoy a synchronous programming interface whereby they can coded as a normal fn main(), in which they can communicate using let _result = other_coreplay_actor(data).await?. In the case other_coreplay_actor is in the same core in that JAM block, this call is synchronous, and in case in another care, the actor is paused and will be resumed in a later JAM block. This exactly possible because of JAM services and their flexible scheduling, and PVM's properties.\nCoreChains Service\nFinally, let's wrap up\nAppendix: Data Sharding\nThe type of data that a blockchain application has access to\n\nSharded data: L2 state, parachain state. Cheap, only commitment is kept in L1,\nL1 Data: smart contract living on L1\nNew: DA layer\n\nAppendix: Re Defining Blockspace\nPolkadot's blockspace is therefore a combination of a lot of in-core blockspace, and a reasonable amount of on-chain blockspace.\nAppendix: Scalability Space Map\n\nBeefy hardware + optimization: Solana\nOptimistic Rollups\nZKP\nData and Execution Sharding\n\nA short digest from the graypaper.\nResources\n\n7.9 Polkadot 2.0: CorePlay, CoreChains, Corejam, Safrole, PolkaVM - Polkadot by Gavin @PBA4 - YouTube\nGavin Wood: The Gray Paper Interview - JAM &amp; the Future of Polkadot - Behind the Code: Web3 Thinkers - YouTube\n\naka. Blockchain, or state transition function. ‚Ü©Ô∏é\n\nWe called the L2's state POV, and the combination of the two PVF. ‚Ü©Ô∏é\n\nWorkItem resembles a transaction, and WorkPackage resembles a block. ‚Ü©Ô∏é ‚Ü©Ô∏é\n\nNote that the graypaper calls this DA layer, the Distributed Data Lake, DDL for short. For the sake reducing the number of new keywords in the article, we continue to refer to it as DA, or DA Layer. ‚Ü©Ô∏é\n\nIt is crucial to already point out that JAM is only meant to replace the Polkadot relay chain. Parachains, and all applications that run on top of Polkadot remain intact, mainly thanks to <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/posts/tech/demystifying-jam/#core-chain\">CoreChain</a>. ‚Ü©Ô∏é\n\nAnd the 3rd one being an on_message, which is called when a message from another service arrives. ‚Ü©Ô∏é\n\nFor more information about the scheduling of services see the &quot;Authorization&quot; section in the graypaper. ‚Ü©Ô∏é",
		"tags": [ "note","polkadot","jam"]
},

{
		"title": "For Those Who Don't Want rust-analyzer: One Regex to rul them all",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/tech/for-those-who-don-t-want-rust-analyzer-one-regex-to-rul-them-all/",
		"content": "I was recently emailed by someone who had seen one of my crowdcast seminars on substrate, and asked me to share my Rust setup in vs-code for finding symbols and jumping to references. Before answering a simple &quot;I use rust-analyzer as well&quot;, I looked into the video and I realized that I, indeed, was not using it at the time. A long time before that video was recorded, I had given up on using rust-analyzer for substrate because simply it was such a massive mono-repo that even without any CheckOnSave, or overwriting the check command to use cargo-remote, it was too much for my laptop to handle.\nAt that point, I developed two simple regex-based shortcuts to fill the gap for me, and I want to\nuse the reply to this email to share it with a broader audience as well, since there could still be\nmany people out there for whom running rust-analyzer is too expensive because of huge repositories, or limited hardware resources. So, here it goes!\nFirst, we need a regex that can match symbols. You probably know where very that the moment that you have generics in your code, searching for something like Impl Something for SomethingElse no longer works, because there are a lot of generics (&lt;T: ...&gt;) in the same line. I took the fix for this (which is just adding &lt;.*?&gt; to your regex search) and expanded it to match as many type declarations as possible, among a few other things. At the end, I settled on:\n(macro_rules!|const|enum|struct|fn|trait|impl(&lt;.*?&gt;)?|type)\n\nBut having to paste/type the regex every time is not super nice, so I found a shortcut that\nwould have this ready for me in the global search, with regex mode available:\n// add this to your `keybindings.json`\n{\n\t&quot;key&quot;: &quot;cmd+shift+h&quot;, // you can and should use whatever you want here.\n\t&quot;command&quot;: &quot;workbench.action.findInFiles&quot;,\n\t&quot;args&quot;: {\n\t\t&quot;query&quot;: &quot;(macro_rules!|const|enum|struct|fn|trait|impl(&lt;.*?&gt;)?|type) &quot;,\n\t\t&quot;isRegex&quot;: true,\n\t\t&quot;triggerSearch&quot;: true,\n\t\t// &quot;filesToInclude&quot;: &quot;${relativeFileDirname}&quot;, // no variables in findInFiles\n\t\t&quot;preserveCase&quot;: true,\n\t\t&quot;useExcludeSettingsAndIgnoreFiles&quot;: false,\n\t\t&quot;isCaseSensitive&quot;: true,\n\t\t// &quot;matchWholeWord&quot;: true,\n\t\t// &quot;filesToExclude&quot;: &quot;&quot;\n\t}\n}\n\nThis allowed me to quickly go from: I have type name Foo in my head, I want to find its\ndefinition real quick.\n\nBut, one of the greatest magics of any IDE or rust-analyzer is that you get that juicy jump to\ndefinition, and I could not yet mimic that, but at least tried! The next shortcut will allow you to\ndo exactly the same thing as the previous shortcut, but do it for the current highlighted keyword:\n{\n\t&quot;key&quot;: &quot;cmd+shift+g&quot;,\n\t&quot;command&quot;: &quot;search.action.openNewEditor&quot;,\n\t&quot;args&quot;: {\n\t\t&quot;query&quot;: &quot;(macro_rules!|const|enum|struct|fn|trait|impl(&lt;.*?&gt;)?|type) ${selectedText}&quot;,\n\t\t&quot;isRegexp&quot;: true,\n\t\t&quot;showIncludesExcludes&quot;: true,\n\t\t&quot;triggerSearch&quot;: true,\n\t\t&quot;contextLines&quot;: 2,\n\t\t&quot;focusResults&quot;: true,\n\t},\n\t&quot;when&quot;: &quot;editorTextFocus&quot;\n}\n\nAnd then in the search result page, the default Jump to Definition would just work, which you can configure again to be any key that you want.\n\nBonus: shortcuts to navigate the results\nOver time, I learned that shortcuts to navigate through both local and global search are super\nuseful. You can already see me use them in the previous gif. Highly recommended to set them to a keyboard shortcut that you can easily remember and readily use. These are the related keyboard shortcuts:\n{\n\t&quot;key&quot;: &quot;ctrl+'&quot;,\n\t&quot;command&quot;: &quot;editor.action.nextMatchFindAction&quot;,\n\t&quot;when&quot;: &quot;editorFocus&quot;\n}\n{\n\t&quot;key&quot;: &quot;ctrl+.&quot;,\n\t&quot;command&quot;: &quot;search.action.focusNextSearchResult&quot;,\n\t&quot;when&quot;: &quot;hasSearchResult || inSearchEditor&quot;\n},\n{\n\t&quot;key&quot;: &quot;ctrl+,&quot;,\n\t&quot;command&quot;: &quot;search.action.focusPreviousSearchResult&quot;,\n\t&quot;when&quot;: &quot;hasSearchResult || inSearchEditor&quot;\n},\n{\n\t&quot;key&quot;: &quot;ctrl+c&quot;,\n\t&quot;command&quot;: &quot;search.action.clearSearchResults&quot;\n},\n{\n\t&quot;key&quot;: &quot;ctrl+;&quot;,\n\t&quot;command&quot;: &quot;editor.action.previousMatchFindAction&quot;,\n\t&quot;when&quot;: &quot;editorFocus&quot;\n},",
		"tags": [ "note"]
},

{
		"title": "Polkadot's Build Horizon",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/tech/polkadot-s-build-horizon/",
		"content": "This write-up explains what Polkadot is at 4+1 different levels for Builders, in a color coded fashion:\n\nPolkadot, the platform itself\nOnchain Development: Runtime/Parachain/Task development\nOnchain Development: Smart Contract\nMessaging between the previous components\n(+1) Off-chain applications talking to any of the above items.\n\nFor each item, I have listed what I believe to be the best ‚Äúeducational resource‚Äù on the topic now or in the near future. This is by no means exhaustive, and I encourage readers to comment what else they can think of.\n\nI generally refrain from referencing docs.substrate.io as it is not a well maintained resource. I am working, and hope to see a smaller but more accurate replacement for this website, such as polkadot-sdk-docs\n\n1. Polkadot, the Platform\nFirst, what is Polkadot itself, as a platform? A ubiquitous computer/blockchain that is\n\nMulticore, as in, it has heterogeneous sharded execution. Each shard/core can execute a different task.\nProvides a homogenous layer of shared security over all the cores and all the tasks that run on these cores.\nSo far, the only type of task explored has been what we call a &quot;para-chain&quot;, but going forward, we expect to see diverse type of tasks being deployed on Polkadot.\nSo far, the only way to acquire execution time on a core (i.e. &quot;core-time&quot;) has been to win a parachain auction, but soon, with agile core-time, acquiring core-time will become much easier and granular.\n\nResources\n\nhttps://education.web3.foundation/docs/introblock\nhttps://education.web3.foundation/docs/introdot\nhttps://spec.polkadot.network/\nhttps://wiki.polkadot.network/\n\n2. Onchain Development ‚Äì Runtime / Task\nRuntimes are the primary type of tasks that can run on Polkadot cores. They are expressed as WASM blobs. They are scheduled anywhere between one block at a time (formerly known as on-demand parachain, or parathreads) to 2 years (formerly known as a parachain) to anywhere in between (agile-coretime). Commonly built with FRAME, and typically representing a blockchain application logic. But, crucially, a runtime can also represent any other application.\nResources\n\nhttps://education.web3.foundation/docs/introsubstrate\nhttps://education.web3.foundation/docs/introparachain\npolkadot-sdk-docs\nAll of our templates\n\nSubstrate-node-template\nCumulus-parachain-template\nExtended-parachain-template\n\n3. Onchain Development ‚Äì Smart Contracts\nA task/runtime that run on a Polkadot core can itself be what is known as a smart contract platform, similar to Ethereum or Solana, examples of which are Moonbeam and Astar. These platforms could support multiple virtual machines such as EVM and WASM, or both.\nTherefore, Polkadot supports smart contract development as a secondary feature through its evolving ecosystem of parachains.¬†There have also been discussions/proposals on a native smart contract platform for Polkadot, but none has existed so far.\nMoreover, a team can utilize the above technology to deploy what is known as &quot;single dApp chain&quot;. Imagine a contract is successful in a shared environment, such as Moonbeam, and now wants to have more bandwidth and lower fees. This can be achieved by a runtime, written with FRAME, that can execute smart contracts, and only hosts the contracts of this one team. Then, some contracts can be rewritten as FRAME modules, enabling more bandwidth and low-level features. Finally, the contract can graduate to a full FRAME runtime.¬†More on this in the recap figure down below.\nResources\n\nhttps://use.ink/\nFrontier docs\nFrontier-parachain-template\n\n4. Onchain Development ‚Äì Interoperability and Message Passing\nBecause of Polkadot‚Äôs shared security, Runtimes and Smart Contracts (or any other task that resides on a core) can communicate with one another without a need to worry about the economic security of the recipient of the message. Any message can be sent between cores, yet the primary language adopted in the ecosystem is XCM, short for Cross Consensus Message.\n\nXCM-docs\n\n5. Offchain Development\nPolkadot ecosystem comes with a slew of APIs to write decentralized[1] applications that are based on the previous primitives. These programming APIs will allow developers to connect to and interact with a runtime, a smart contract, or both.\nResources\n\nRust: Sub-xt\nJS/TS: Polkadot-JS-API\nJS/TS: Substrate Connect\nSubstrate frontend template\nPolkadot Cloud Library / Polkadot UI Library\npy-substrate-interface\nFull list of client libraries\n\nRecap\nThe following figure shows all the aforementioned development types:\n\nPolkadot, the platform itself\nOnchain Development: Runtime/Parachain/Task development\nOnchain Development: Smart Contract\nMessaging between the previous components\n\nAll cores in this figure are being used for bulk coretime, except Core 3 which is meant to represent instantaneous coretime.\nT1 and T2 are two runtimes sharing a core. This represents a broad category of scheduling where they take turns, uses a secondary market, or anything else.\n\nSee RFC#1 for more examples.\n\nT3 is a long-running Runtime, using bulk coretime.\nT4 is a generic smart contract platform like Moonbeam. Your application can be one or many of the contracts running on T4.\nT5 is a proprietary smart contract platform aka. ‚Äúsingle dApp chain‚Äù, where you have pallet-contracts, a number of contracts, and a number of (custom) FRAME pallets all baked into a single runtime. This runtime can initially be scheduled sporadically, as is the case with T5.\nT6 is the same as T5, but scheduled on a dedicated core, as opposed to on-demand.\n\nSo, for example, imagine the following user journey for a business on Polkadot: You start as a set of contracts running on an existing parachain. You expand into T5, a &quot;Single-dApp Chain&quot; where you can have both contracts, and pallets. Once the demand ramps up, T5 evolves to T6, meaning you use more bandwidth. Finally, one could eliminate all contracts and use only pallets for their application logic, such that they can leverage control over the runtime maximally, such as T3.\n\nAny communication within one Runtime (so long as you remain in one green box) is synchronous. Anything that wants to cross the boundaries of the green box is asynchronous. Any two components in this figure can talk to each other, but if it is asynchronous, it could use XCM.\n\nThis is a good moment to reflect: a lot of the complexity in XCM is exactly because it is designed to deal with asynchronous communication across consensus systems.\n\nTechnically, any communication within one core can be synchronous, but this is not how it is implemented now. In principle, two parachains that are co-scheduled on a single core (T1 and T2) can also have synchronous communication.\nFinally, T7 is representing an application that is utilizing two Polkadot cores at the same time. This essentially allows a runtime to move at very fast block times. This is enabled by what is known as &quot;async-backing&quot;. Moreover, Polkadot could allow tasks to increase and reduce their bandwidth on the fly. This is called &quot;elastic scaling&quot;.\n\nMiscellaneous Resources\n\nhttps://education.web3.foundation/docs/introrust\nhttps://polkadot-blockchain-academy.github.io/pba-book/frame/index.html\nhttps://github.com/Awsmdot/awesome-dot\nhttps://github.com/shawntabrizi/rust-state-machine\nhttps://dotcodeschool.com/\nhttps://www.youtube.com/@polkadotblockchainacademy/playlists\n\ndecentralized: Polkadot comes with a light-client-first application development mindset, which means applications written with the following tools can connect to light clients (instead of centralized API providers) and actually be decentralized. ‚Ü©Ô∏é",
		"tags": [ "note","polkadot"]
},

{
		"title": "The 10x Developer Myth: All About Keyboard",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/tech/the-10x-developer-myth-all-about-keyboard/",
		"content": "Theory\nRecently, I engaged in a few discussions about optimal use of editors and keyboard shortcuts with new team members. It eventually inspired me to write this short article, asserting that while this &quot;10x developer&quot; idea is for the most part about keyboard shortcuts. In other words, while I think developers also vary in terms of how they think about problems, and their cognitive abilities, 90% of the time, the ones that stood out among others, and are sometimes as much as 10 time more &quot;productive&quot;, are simply better at the craft. Any I think 99% of the craft of programming revolves around the relationship between you and your keyboard.\nI am already expressing my first thesis implicitly. Keyboard. Not your mouse, not your trackpad. Keyboard. Those are inefficient alternatives put there for the times where the programmer fails to use the keyboard (I use my trackpad often, like most others, sadly). As I will demonstrate later, every instance where you use the trackpad your are already losing a little bit of time. So, focus on learning more about how to efficiently use your keyboard, rather than dragging things out with your mouse.\nA little story about how I came to be so dogmatic about this: The first laptop I had as a programmer was this piece of history, and for whatever reason I didn't have an external mouse. The trackpad on these machines is a joke. It is so small that you barely can move it from one corner of the screen to the other. Instead od trying to fight it, I learned from a very early stage of my career as a programmer to hyper utilize the keyboard. Over time, this became a blessing. Nowadays, having had multiple generations of MacBooks, even though I appreciate the trackpad for other tasks and am happy to not need to brows my file system anymore using keyboard, I happily hold the same habit while I am coding and try to avoid the trackpad as much as I can.\nSecond, and main part of the thesis: In general, as a programmer, your attention is disrupted in generally one instance: when your hands over the keyboard fail to keep up what it in your mind in a timely manner. Let's consider this both when you are reading and writing code.\nIn writing, you want to be able to quickly prototype different approaches, and put words on the screen. Imagine you have to do a refactor, where, for example, you have to unwind a few loops and change their indentation real quick, duplicate a few lines etc. If you manage to do this almost as fast as your brain is unpacking it, while you are in the creative process, you can continue, and your attention is not disrupted. If you delay doing this for multiple minutes (probably your damn mouse, hitting copy and paste and moving the cursor with it) you have most probably lost the train of thought that led you to want to do this anyway. Moreover, I frequently see people finding doing such code writings as &quot;annoying&quot;, which is understandable because it is being done in a very poor way. This can sadly lead to a decline in general interest in programming as whole.\n\nIdeally, you want your hands on the keyboard to be so agile that even mundane refactors are actually fun to do, because you get to practice all the cool tricks you know.\n\nIn reading, I think this is even more visible. Imagine you want to follow a train of types and traits that relate to one another, trying to demystify them. If it takes you too long to jump from the file where you see the symbol Foo to where Foo is defined or used, then this process becomes mighty ANNOYING, and again can be demotivating to experience, other than being unproductive as well. And this is assuming you know where Foo is defined. If not, you have two tasks at hand: where is Foo (which is mostly solved for you if you have a language server), and how can I get there in the most efficient way (and the most efficient way never involves using a trackpad).\nThis is where my whole rant about not using the mouse is coming from. I think if you are really bad in the above, there is a long way that you can go while using a mouse. But sooner or later, you will reach a point where you realize that point of &quot;losing the attention&quot; is every time your hands must leave the keyboard, because you want to perform an action that you cannot do while your hands are already on the keyboard.\nSo all in all, in theory: you want your hands, on the keyboard, to be able to keep up with your head while it is thinking. This is the main message, and how you achieve can vary. But the important point is to keep improving. Every time you face that annoying moment of not being able to do something easily, go the Google, and the documentation of whatever editor you are using, and see if/how you can improve this. Don't cope with such micro-inefficiencies, as they accumulate over time. To the contrary, once you start fixing them, you will learn your editor in much greater depth, which has a compounding positive effect.\nYour editor is of choice is very important here. It is like the brush to the painter. Make sure you become a strong fanboy of it by following all the releases, seeing what is new etc.\nWith all of that, I will list some of the settings, configurations, and shortcuts that help me achieve the above.\nPractice\nThe assumption here is that like most programmers, you have a few desktops, in which you have separated at least 3 main tools: An editor, a terminal, and a browser (and perhaps more).\nOperating System Level\n\nThe absolute first step is learn your cursor. The involves a few settings:\n\nIncreasing its speed significantly. The default cursor speed is way too slow.\nLearning how to jump by word rather than character.\nLearning how to jump the beginning and end of the line.\n\nLearning to move between the few desktops you have open via keyboard.\n\nIn my linux days, the shortcut to move the active application to another desktop but was rather easy, but is rather dodgy to setup right in MacOs. I have mostly forgotten about this\n\nLastly, you want to be able to easily split your screen into two, left and right. I personally find anything more than this to be an overkill, but most apps that allow you to do one allow you to do all of them, such as rectangle.\n\nThere's a lot more here, but I presume you can figure out what else can help you achieve the above principles better.\nEditor Level\nI personally use VSCode with Rust analyzer. But almost everything here should be applicable to any language and editor.\nFinding The Right File\nFirst, you want to be able to easily find the file that you are looking for. There are typically two ways to find a file:\n\nFind it by location in the sidebar, file-tree list thingy.\nFind it by name.\n\nThe find a file by its location, you want a keyboard shortcut that can quickly move the focus of your editor from the code you are editing to the the file-tree (remember, no touching the damn mouse for any of this!).\n\nThe keyboard shortcut config name for this is &quot;View: Show Explorer&quot; in Vscode.\nSometimes, you have the file that is already of interest open in a different tab, and you know that tab is nearby. For this, you need a shortcut to move to the next/previous tab real quick.\n\nI personally end up having a million tabs open at all times. Sometimes I happily disable tabbing with Vscode zen mode and call it a day. The two ways mentioned above are good enough to find any file quickly.\n\nIf you use the integrated terminal in vscode (I don't) you probably want shortcuts to switch focus to/from it as well.\n\nIf you want to use a file by location, the way to do it is the fuzzy finder. I don't know what editor you use, but it must have a fuzzy finder. A fuzzy finder is one that more or less does it best to match the string you are inserting to anything in the path of the final file. For example, if you are looking for a file that is located in /foo/bar/prettyUniquePart/src/mod.rs it is not wise to try and find it in the fuzzy finder with the mod.rs part, but rather inserting pretty might be enough.\n\nThe fuzzy search can be opened by VScode using cmd+p by default, and it can do a lot more than fuzzy search!\nNavigating The Right File.\nNow, assuming you are the master of opening files, you want to be able to navigate it in a skillful way.\nFirst, you want to have ways to scroll the file real quick. Similar to the cursor speed, where the default speed is super super slow, the default scroll speed might also be very slow. You want to know the keyboard shortcuts that let you:\n\nJump a page up or down (shortcut name: cursorPageDown).\nJump to end and beginning of the file (shortcut name: cursorBottom).\n\nAs a backup, should you fail and need to use your trackpad, VSCode can be configured to have a fast-scroll next to the normal scroll, which is pretty useful.\n\nThen, you want to be able to find some symbols. If you have a language server, you will get a lot of information related to this in your screen already, but there's still a few tips to be added.\nFirstly, if you have a proper language server, you better be apt at using it. This involves knowing the keyboard shortcut for super useful operations such as: &quot;Jump To Definition&quot;, &quot;Peek Definition&quot;, &quot;Find References&quot; and such.\n\nThen, two additions to the fuzzy search cmd+p. If you open the same, and prefix it with @, then it turns into a local symbol search. If you prefix it with # it turns into a global symbol search (might not work on large projects). If you prefix it with : it will help you jump to a file with a specific line number.\n\nLastly, if you put &gt; it will allow you to execute internal commands, such as &quot;format document&quot; etc.\n\nThere is also a fuzzy (or more intelligent) suggestion shortcut in most editors, that you can just use to ask for suggestions from the editor. The shortcut for this mostly involves something with space (cmd+space) and is called &quot;Trigger Suggest&quot; in Vscode.\n\nWith or without Rust analyzer, I have a few regex-based custom commands that I find vastly useful in large Rust Mono-repos, to find symbols quickly.\n\nThen, let's talk about the (much underrated) cmf+f and cmf+shift+f. You know what they do: they invoke local file search, and global search. They are okay as they are, but what are you going to do with the results, without needing to use the cursed mouse? that's right, you need shortcuts to navigate the results. This is really powerful, and turns these mundane shortcuts into super tools.\n\nThe keyboard shortcut for these is called &quot;Find Next/Previous&quot;, &quot;Search: Focus Next/Previous Search Result&quot;.\nEditing The Right File.\nLastly, let's talk a bit about edit editing files. Writing code is mostly easy if you are only adding words. It mostly gets hard if you want to do bulk edits, or if you want to do more complicated things. Here are a few things that I find important, but my suggestions here are really non-exhaustive.\n\nindent/de-indent\n\nduplicate line\n\nmove line(s)\n\nsome knowledge of how to do multi-cursor operations.\n\nTerminal Level\nI won't get into details here because this has already gotten long, but be aware that you can also optimize your use of terminal by quite a lot as well. The single most useful thing I can suggest for coding is the ability to jump right from your editor into the file path where some error has occurred (sadly, using your trackpad). I believe ITerm2 and Vscode's internal terminal support this out of the box.\n\nAll in all, there's not much new that I am saying here. Most of these shortcuts and operations are already known. The main argument is: &quot;Use the keyboard!&quot; üòÖ.",
		"tags": [ "note"]
},

{
		"title": "Thoughts Blockchain and Blockspace Scalability",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/posts/tech/thoughts-blockchain-and-blockspace-scalability/",
		"content": "Originally published in the Polkadot forum.\n\nWhile thinking about a tutorial idea about FRAME, I came up with an interesting example that showcases/categorizes the scalability issue in blockchains, which is somewhat entangled with game theory. Here it goes.\nImagine a simple validator selection system whereby:\n\nanyone can call¬†bond(amount), which registers them as &quot;wanna-be validator' with¬†amount¬†as their approval-stake.\nanyone can call¬†delegate(who, amount), which increases the approval-stake of¬†who by amount.\nevery x blocks, we want to get the top¬†x¬†wanna-be validators based on their respective approval-stake (to the best of our abilities).\n\nThis is an extremely simple problem in the context of more information systems, but it is a surprisingly hard problem to solve in blockchains. Let's explore why.\nThe answer really boils down to one root issue: Blockchains, unlike all almost many other information systems, are not sybil-resistant. When you are thinking about solving the above algorithmic problem, you must assume you are solving it for an infinitely large input size. In this case, this translates to an infinitely large number of wanna-be validators.\nThe first step in solving such issues is acknowledging such issues, and finding the boundaries of where your system breaks. For the above example, assume that an analysis on weight, memory or state usage could help us conclude that the system would work for as long as there are less than V_max wanna-be validators registered in the system.\nIn essence, the problem can be stated as sybil-irresistance -&gt; scalability issues. In written words, blockchains are not sybil resistance, therefore face scalability issues.\nWe can tackle this issue in both sides of the above arrow.\nTo fix/improve the sybil-resistance part:\n\nCrypto-economics: This means, the deposit to become a wanna-be validator must be high enough such that the cost of registering V_max wanna-be validators is so high that no sane human/attacker would ever do it.\n\nPermissionless operations: The system is not sybil-resistant because it is permissionless and anyone can spam the system. But, that also means anyone can clean aka. de-spam the system üß†. In the above problem, imagine the chain would keep a linked-list of wanna-be validators, and allow anyone to submit an extrinsic that would swap two nodes in the list, as long as it is a positive step toward keeping it sorted. Crucially, if the extrinsic is successful, the submitter gets a (possibly small) reward, that could come from the deposit of the wanna-be validator that was misplaced.\nThis approach almost always goes hand-in-hand with crypto-economics, and would significantly lower the deposits needed to make sure V_max is never reached. For example, if we solely rely on crypto-economics, we probably have to impose a relatively hefty deposit to solve the above validator selection problem. But if we also rely on permissionless-operations, the deposit only needs to be high enough such that it is enough incentive for someone to submit those sorting extrinsics!\n\nOther Web3 primitives such as DiDs, PoPs and NFTs. There is a broad category of other primitives out there that, if themselves implemented correctly, can de-sybil the system. In our example, this translates to: making sure only accounts that have a particular identity, NFT, or personhood proof attached to them can become wanna-be validators. These systems could be enough to give you credible guarantees that V_max will not be reached.\n\nPolkadot's Staking system in fact implements a linked-list like above, you can read more about it here.\n\nNote that neither of these solutions attempt at really solving the scalability part. They don't help increase V_max. They merely help with making the system more sybil resistance, ie. knowing that V_max is (almost) never reached.\nOftentimes, you want both. You want to be somewhat more sybil resistant, but you also want to be more scalable. Imagine you have implemented some or all of the of the above, but simply want that V_max to be larger. This translates to &quot;more blockspace&quot; and typically there are two ways to improve it:\n\nBlockspace optimization. This is a realization that blockspace is a valuable scarce resource, and its usage can be avoided, if possible. Imagine, given input X and output A, a function F(x) -&gt; A and verifier function V(A) -&gt; bool which can verify the output to be correct. We have two options: run F onchain, which needs no verification because the code is trusted. Or else, run F(x) offchain, where none of these scalability issues exist, and submit A back to the chain, and run V(A) onchain. Depending on the complexity of F, V and the size of x and A, it might be the case that doing the latter is more efficient. This realization is the basis of the rollup space. Specifically, ZK-rollups fit the above description perfectly. I would leave it up to the reader to tinker on whether the above sorting problem can also leverage this optimization or not (and comment their thoughts).\nBlockspace scaling: Another solution is to simply leverage more blockspace, which one can do by writing operations that are multi-block. This also increases the maximum limit of V_max that is acceptable by the system, yet poses its own set of problems.\n\nRecall, all of this helps us achieve a higher V_max for the above problem, neither try and prevent spammers to fill the entire space of V_max.",
		"tags": [ "note","polkadot","blockchain"]
},

{
		"title": "(Persian) Polkadot Seminar for Rust-Iran Community",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/persian-polkadot-seminar-for-rust-iran-community/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "(Persian) Random Rust Video Tutorials",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/persian-random-rust-video-tutorials/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Nomination Pools and The Story of The Polkadot's NPoS | Polkadot Decoded 2022",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/nomination-pools-and-the-story-of-the-polkadot-s-n-po-s-polkadot-decoded-2022/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Offline Phragmen Tool and Substrate Debug Kit | Substrate Seminar",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/offline-phragmen-tool-and-substrate-debug-kit-substrate-seminar/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Phragmen Overview | Substrate Seminar",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/phragmen-overview-substrate-seminar/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Phragmen and The NPoS Problem | Sub0 Online",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/phragmen-and-the-n-po-s-problem-sub0-online/",
		"content": "",
		"tags": [ "note"]
},

{
		"title": "Polkadot's Nominated Proof of Stake: Past, Present, and the Future | Parity and Friends",
		"date":"Mon Jul 01 2024 10:36:01 GMT+0000 (Coordinated Universal Time)",
		"url":"/talks/polkadot-s-nominated-proof-of-stake-past-present-and-the-future-parity-and-friends/",
		"content": "",
		"tags": [ "note"]
}
]